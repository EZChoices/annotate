-- Supabase schema for EchoAtlas Stage 2
-- Adjust schema/owners/rls to your org standards.

-- Keep table assumed existing with at least:
--   file_name text primary key
-- Optional prefill columns (set env vars to include in manifest):
--   diarization_rttm_url text
--   transcript_vtt_url text
--   transcript_ctm_url text
--   translation_vtt_url text
--   code_switch_vtt_url text
-- Optional audio proxy col:
--   audio_proxy_url text
ALTER TABLE IF EXISTS public.keep
  ADD COLUMN IF NOT EXISTS audio_proxy_url text,
  ADD COLUMN IF NOT EXISTS translation_vtt_url text,
  ADD COLUMN IF NOT EXISTS code_switch_vtt_url text;

-- Optional separate audio proxies table (if preferred over column on keep)
CREATE TABLE IF NOT EXISTS public.audio_proxies (
  id bigint generated by default as identity primary key,
  file_name text not null unique,
  audio_proxy_url text not null,
  created_at timestamptz not null default now()
);
ALTER TABLE public.audio_proxies ENABLE ROW LEVEL SECURITY;
DO $$ BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies WHERE schemaname='public' AND tablename='audio_proxies' AND policyname='insert_select_audio_proxies'
  ) THEN
    CREATE POLICY insert_select_audio_proxies ON public.audio_proxies
      FOR ALL TO authenticated USING (true) WITH CHECK (true);
  END IF;
END $$;

-- Stage 1 (already in repo):
CREATE TABLE IF NOT EXISTS public.clip_assignments (
  id bigint generated by default as identity primary key,
  file_name text not null,
  assigned_to text not null,
  assigned_at timestamptz not null default now()
);
CREATE INDEX IF NOT EXISTS clip_assignments_file_idx ON public.clip_assignments (file_name);

-- Stage 2 assignments (Keep category)
CREATE TABLE IF NOT EXISTS public.clip_assignments_stage2 (
  id bigint generated by default as identity primary key,
  file_name text not null,
  assigned_to text not null,
  assigned_at timestamptz not null default now()
);
CREATE INDEX IF NOT EXISTS clip_assignments_stage2_file_idx ON public.clip_assignments_stage2 (file_name);

-- Stage 2 annotations storage
CREATE TABLE IF NOT EXISTS public.annotations_stage2 (
  id bigint generated by default as identity primary key,
  data jsonb not null,
  annotator text,
  received_at timestamptz not null default now(),
  clip_id text,
  video_url text
);
CREATE INDEX IF NOT EXISTS annotations_stage2_gin ON public.annotations_stage2 USING GIN (data);

-- RLS policy guidance (optional; service role bypasses RLS)
ALTER TABLE public.clip_assignments ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.clip_assignments_stage2 ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.annotations_stage2 ENABLE ROW LEVEL SECURITY;

-- Allow authenticated insert/select; tailor to your auth model
DO $$ BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies WHERE schemaname='public' AND tablename='clip_assignments' AND policyname='insert_select_assignments'
  ) THEN
    CREATE POLICY insert_select_assignments ON public.clip_assignments
      FOR ALL TO authenticated USING (true) WITH CHECK (true);
  END IF;
END $$;

DO $$ BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies WHERE schemaname='public' AND tablename='clip_assignments_stage2' AND policyname='insert_select_assignments_stage2'
  ) THEN
    CREATE POLICY insert_select_assignments_stage2 ON public.clip_assignments_stage2
      FOR ALL TO authenticated USING (true) WITH CHECK (true);
  END IF;
END $$;

DO $$ BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies WHERE schemaname='public' AND tablename='annotations_stage2' AND policyname='insert_select_annotations_stage2'
  ) THEN
    CREATE POLICY insert_select_annotations_stage2 ON public.annotations_stage2
      FOR ALL TO authenticated USING (true) WITH CHECK (true);
  END IF;
END $$;

-- If you use postgres roles other than 'authenticated', duplicate the policy for your role.
